package com.packt.ticketportal.domain.repository.impl;

import com.packt.ticketportal.domain.Ticket;
import com.packt.ticketportal.domain.mappers.IMapResultSetIntoEntity;
import com.packt.ticketportal.domain.repository.ITicketRepository;
import com.packt.ticketportal.domain.repository.RepositoryBase;
import com.packt.ticketportal.domain.unitofwork.IUnitOfWork;
import org.springframework.stereotype.Repository;

import java.sql.Connection;
import java.sql.SQLException;

/**
 * Created by Kuba on 2016-11-17.
 */
public class TicketRepository extends RepositoryBase<Ticket> implements ITicketRepository {

    public TicketRepository(Connection connection, IMapResultSetIntoEntity<Ticket> mapper, IUnitOfWork uow){

        super(connection,mapper,uow);
    }

    @Override
    protected String tableName(){
        return "ticket";

    }

    @Override
    protected String createTableSql(){
        return "CREATE TABLE ticket(" + "id bigint GENERATED BY DEFAULT AS IDENTITY, " +
                "name VARCHAR(30)," + "price DECIMAL," + "ticketDesc VARCHAR(255), " +
                "category VARCHAR(30), " + "inStock BIGINT, " + "location varchar(30)," + "customer bigint DEFAULT NULL " +  ");";
    }

    @Override
    protected String insertSql() {
        return "INSERT INTO ticket(name,price, ticketDesc, category, inStock, location) VALUES(?,?,?,?,?,?);";
    }

    @Override
    protected String updateSql() {
        return "UPDATE TICKET set name=?,price=?, ticketDesc=?, category=?, inStock=?, location=?, customer=? WHERE id=?;";
    }


    @Override
    protected void setupInsert(Ticket entity) throws SQLException {
        insert.setString(1, entity.getTicketName());
        insert.setBigDecimal(2, entity.getPrice());
        insert.setString(3,entity.getTicketDesc());
        insert.setString(4,entity.getTicketCat());
        insert.setLong(5,entity.getTicketsInStock());
        insert.setString(6,entity.getLocation());


    }

    @Override
    protected void setupUpdate(Ticket entity) throws SQLException {
        update.setString(1, entity.getTicketName());
        update.setBigDecimal(2, entity.getPrice());
        update.setString(3,entity.getTicketDesc());
        update.setString(4,entity.getTicketCat());
        update.setLong(5,entity.getTicketsInStock());
        update.setString(6,entity.getLocation());
        update.setInt(7,entity.getCustomerId());
        update.setInt(8, entity.getId());

    }
}
